# Generated by Django 5.0.7 on 2024-07-30 14:25

import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserCustomModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(default='username', error_messages={'unique': 'A user with that username already exists.'}, max_length=200, unique=True, verbose_name='username')),
                ('first_name', models.CharField(error_messages={'unique': 'A user with that first name already exists.'}, max_length=100, verbose_name='First Name')),
                ('last_name', models.CharField(error_messages={'unique': 'A user with that last name already exists.'}, max_length=100, verbose_name='Last Name')),
                ('email_address', models.EmailField(default='email@example.com', error_messages={'unique': 'A user with that email already exists.'}, max_length=254, unique=True, verbose_name='Email Address')),
                ('phone_number', models.CharField(default='79013855268', error_messages={'unique': 'A user with that phone number already exists.'}, max_length=11, unique=True, verbose_name='Phone Number')),
                ('date_birth', models.DateField(default=django.utils.timezone.now, error_messages={'unique': 'A user with that date birth already exists.'})),
                ('account_created', models.DateTimeField(auto_now_add=True, error_messages={'unique': 'A user with that date created account already exists.'}, verbose_name='Account Created')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active?')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Is Staff?')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='Is Superuser?')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'ordering': ['account_created'],
                'indexes': [models.Index(fields=['account_created'], name='users_userc_account_3da202_idx')],
            },
        ),
    ]
